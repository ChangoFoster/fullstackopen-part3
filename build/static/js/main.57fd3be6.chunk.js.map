{"version":3,"sources":["services/persons.js","components/Filter.js","components/Notification.js","components/PersonForm.js","components/Persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","Filter","label","handleChange","filter","onChange","value","Notification","message","style","className","PersonForm","handleNameChange","nameValue","handleNumberChange","numberValue","submit","onClick","type","Persons","filterTerm","persons","remove","toLowerCase","name","indexOf","map","number","key","filterList","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setFilterTerm","setMessage","error","setError","useEffect","personService","initialPersons","submitForm","event","preventDefault","currentPerson","find","person","window","confirm","personObject","updatePerson","p","update","newPerson","concat","setTimeout","target","undefined","borderColor","removePerson","result","updatedPersons","catch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.57fd3be6.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, remove, update }\n","import React from 'react'\n\nconst Filter = ({label, handleChange, filter}) => {\n  return (\n    <div>\n      <label>{label}</label>\n      <input onChange={handleChange} value={filter}/>\n    </div>\n  )\n}\n\nexport default Filter\n","import React from 'react'\n\nconst Notification = ({message, style}) => \n  message !== null ? <div className=\"error\" style={style}>{message}</div> : null\n\nexport default Notification\n","import React from 'react'\n\nconst PersonForm = ({\n  handleNameChange, nameValue,\n  handleNumberChange, numberValue,\n  submit}) => {\n\n  return (\n    <form>\n      <div>\n        <label>name: </label>\n        <input onChange={handleNameChange} value={nameValue}/>\n        <br />\n        <label>number:</label>\n        <input onChange={handleNumberChange} value={numberValue}/>\n      </div>\n      <div>\n        <button onClick={submit} type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm\n","import React from 'react'\n\nconst Persons = ({ filterTerm, persons, remove }) => {\n\n  const filterList = () => {\n    const filter = filterTerm.toLowerCase()\n    return persons\n        .filter(({name}) => name.toLowerCase().indexOf(filter) >= 0)\n        .map(({id, name, number}) => {\n          return (\n            <li key={id}>\n              {name} {number}\n              <button onClick={() => remove(id)}>Delete</button>\n            </li>\n          )\n        })\n  }\n\n  return <ul>{filterList()}</ul>\n}\n\nexport default Persons\n","import React, { useEffect, useState } from 'react'\nimport personService from './services/persons'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [ filterTerm, setFilterTerm ] = useState('')\n  const [ message, setMessage ] = useState(null)\n  const [ error, setError ] = useState(false)\n\n  useEffect(() => {\n    personService.getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const create = (name, number) => {\n    const personObject = { name, number }\n    personService.create(personObject)\n      .then(newPerson => {\n        setPersons(persons.concat(newPerson))\n        setNewName('')\n        setNewNumber('')\n        setError(false)\n        setMessage(`Added ${newPerson.name}`)\n        setTimeout(() => {setMessage(null)}, 3000)\n      })\n  }\n\n  const remove = id => {\n    const removePerson = persons.find(p => p.id === id)\n    const result = window.confirm(`Delete ${removePerson.name}`)\n    const updatedPersons = persons.filter(p => p !== removePerson)\n    if (result) {\n      personService.remove(id)\n        .then(response => {\n          setPersons(updatedPersons)\n        })\n        .catch(error => {\n          setError(true)\n          setMessage(`${removePerson.name} has already been removed`)\n          setTimeout(() => { setMessage(null) }, 3000)\n          setPersons(updatedPersons)\n        })\n    }\n  }\n\n  const update = (person, number) => {\n    const result = window.confirm(`${person.name} already exist, replace number?`)\n    if(result) {\n    const personObject = { ...person, number: number }\n    personService.update(person.id, personObject)\n      .then(updatePerson => {\n        setPersons(persons.map(p => updatePerson.name === p.name\n          ? updatePerson : p)\n        )\n        setNewName('')\n        setNewNumber('')\n      })\n    }\n  }\n\n  const submitForm = (event) => {\n    event.preventDefault()\n    const currentPerson = persons.find(person => person.name === newName)\n    currentPerson\n      ? update(currentPerson, newNumber) : create(newName, newNumber)\n  }\n\n  const success = { borderColor: 'green' }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter\n        label=\"filter show with\"\n        handleChange={(event) => setFilterTerm(event.target.value)}\n        filter={filterTerm}/>\n      <Notification message={message} style={error ? undefined : success} />\n      <h3>add a new</h3>\n      <PersonForm\n        handleNameChange={(event) => setNewName(event.target.value)}\n        nameValue={newName}\n        handleNumberChange={(event) => setNewNumber(event.target.value)}\n        numberValue={newNumber}\n        submit={(event) => submitForm(event)}/>\n      <h3>Numbers</h3>\n      <Persons filterTerm={filterTerm} persons={persons} remove={remove}/>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}